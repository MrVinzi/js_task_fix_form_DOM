{"version":3,"sources":["scripts/main.js"],"names":["items","document","getElementsByTagName","map","item","placeholder","name","split","length","charAt","toLocaleUpperCase","slice","labelName","toUpperCase","parentElement","innerHTML","type","autocomplete","id"],"mappings":";AAAA,aAIA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAFA,IAAMA,EAAQC,SAASC,qBAAqB,SAE5C,EAAIF,GAAOG,IAAI,SAACC,GACRC,IAAAA,EACFD,EAAKE,KAAKC,MAAM,aAAaC,QAAU,EACrCJ,EAAKE,KAAKC,MAAM,aAAa,GAAGE,OAAO,GAAGC,oBACxCN,EAAKE,KAAKC,MAAM,aAAa,GAAGI,MAAM,GAAK,IAC3CP,EAAKE,KAAKC,MAAM,aAAa,GAC/BH,EAAKE,KAAKC,MAAM,aAAa,GAAGE,OAAO,GAAGC,oBACxCN,EAAKE,KAAKC,MAAM,aAAa,GAAGI,MAAM,GAExCC,EACFR,EAAKE,KAAKC,MAAM,aAAaC,QAAU,EACrCJ,EAAKE,KAAKC,MAAM,aAAa,GAAGM,cAC9B,IAAMT,EAAKE,KAAKC,MAAM,aAAa,GAAGM,cACxCT,EAAKE,KAAKC,MAAM,aAAa,GAAGM,cAEtCT,EAAKU,cAAcC,UAGVX,mDAAAA,OAAAA,EAAKE,KACVM,YAAAA,OAAAA,EAGQR,iCAAAA,OAAAA,EAAKY,KACLZ,oBAAAA,OAAAA,EAAKE,KAEGF,sDAAAA,OAAAA,EAAKa,aACfb,iBAAAA,OAAAA,EAAKc,GAEIb,6CAAAA,OAAAA,EAbnB","file":"main.09fe0111.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst items = document.getElementsByTagName('input');\n\n[...items].map((item) => {\n  const placeholder\n    = item.name.split(/(?=[A-Z])/).length >= 2\n      ? item.name.split(/(?=[A-Z])/)[0].charAt(0).toLocaleUpperCase()\n        + item.name.split(/(?=[A-Z])/)[0].slice(1) + ' '\n        + item.name.split(/(?=[A-Z])/)[1]\n      : item.name.split(/(?=[A-Z])/)[0].charAt(0).toLocaleUpperCase()\n        + item.name.split(/(?=[A-Z])/)[0].slice(1);\n\n  const labelName\n    = item.name.split(/(?=[A-Z])/).length >= 2\n      ? item.name.split(/(?=[A-Z])/)[0].toUpperCase()\n        + ' ' + item.name.split(/(?=[A-Z])/)[1].toUpperCase()\n      : item.name.split(/(?=[A-Z])/)[0].toUpperCase();\n\n  item.parentElement.innerHTML = `\n  <label \n    class=\"field-label\" \n    for=\"${item.name}\">\n    ${labelName}\n\n    <input \n      type=\"${item.type}\" \n      name=\"${item.name}\"\n      class=\"field-text\" \n      autocomplete=\"${item.autocomplete}\"\n      id=\"${item.id}\" \n      autofocus \n      placeholder=\"${placeholder}\">\n  </label>`;\n});\n"]}